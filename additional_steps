Steps that need to be performed after install.sh. Some of these could probably be automated:

TODO how to transfer data over from an old personal machine, and how to set up time machine

M-x package-install:
- evil
- evil-escape
- use-package
- ox-jira

- TODO write an install script that means my password manager is installed before I need to start adding SSH keys to GitHub etc
- TODO generating SSH key, adding to accounts
- Log in to iCloud (already done on Mac setup)
- Disable iCloud stuff I don’t want
- Log in to Bitwarden
- Get 1Password and restore contents
    - Remember there are multiple vaults
    - 1Password stores its backups (with all vaults in a single .1p4_zip file) in /Users/lawrence/Library/Group Containers/2BUA8C4S2C.com.agilebits/Library/Application Support/1Password/Backups
    - and there's also ~/code/1password_backups
- Add email accounts
- Get dotfiles and run install script
- Disable guest user
- Tell Spotify not to start at login
- Whack up the keyboard speed in OS X
- mouse speed
- Sort out dock
- Disable spellchecking
- Turn on FileVault
    - TODO what to do with recovery key?
- Install and set up Backblaze
- Set up Alfred (preferences sync) and add Powerpack licence
- Exclude Terminal from Spotlight -> Privacy
- Set iTerm2 to sync preferences with dotfiles dir
- symlink user.js into Firefox profile
- create ~/.gitconfig_local
- clone git-update-messages so that hooks work, and rbenv / bundle install there
- set up time machine
- TODO what about stuff in keychain from old machine? There should be nothing that’s only there hopefully. Also what about Wi-Fi passwords? Perhaps export keychain from old machine.

After switching to zsh, you might notice that you get:

zsh compinit: insecure directories, run compaudit for list.
Ignore insecure directories and continue [y] or abort compinit [n]? ccompinit: initialization aborted

This comment is what I did: https://github.com/zsh-users/zsh-completions/issues/433#issuecomment-600582607

But then Homebrew spat out an error, which I followed:

Error: The following directories are not writable by your user:
/usr/local/share/zsh
/usr/local/share/zsh/site-functions

You should change the ownership of these directories to your user.
  sudo chown -R $(whoami) /usr/local/share/zsh /usr/local/share/zsh/site-functions

And make sure that your user has write permission.
  chmod u+w /usr/local/share/zsh /usr/local/share/zsh/site-functions

and now everything seems happy
